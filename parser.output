Terminals unused in grammar

    ELSE


State 3 conflicts: 1 shift/reduce
State 8 conflicts: 1 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header variables optional_variable body

    2 variables: variable variables
    3          | ε

    4 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    5 type: INTEGER
    6     | CHARACTER
    7     | IDENTIFIER

    8 optional_variable: variable
    9                  | ε

   10 variable: IDENTIFIER ':' type IS statement ';'
   11         | IDENTIFIER ':' LIST OF type IS list ';'

   12 list: '(' expressions ')'

   13 expressions: expressions ',' expression
   14            | expression

   15 body: BEGIN_ statement_ END ';'

   16 statement_: statement ';'
   17           | error ';'

   18 statement: expression
   19          | WHEN condition ',' expression ':' expression
   20          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH

   21 cases: cases case
   22      | ε

   23 case: CASE INT_LITERAL ARROW statement ';'

   24 condition: condition ANDOP relation
   25          | relation

   26 relation: '(' condition ')'
   27         | expression RELOP expression

   28 expression: expression ADDOP term
   29           | term

   30 term: term MULOP primary
   31     | primary

   32 primary: '(' expression ')'
   33        | HEX_INT_LITERAL INT_LITERAL
   34        | REAL_LITERAL
   35        | CHAR_LITERAL
   36        | IDENTIFIER '(' expression ')'
   37        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 12 26 32 36
    ')' (41) 12 26 32 36
    ',' (44) 13 19
    ':' (58) 10 11 19
    ';' (59) 4 10 11 15 16 17 20 23
    error (256) 17
    IDENTIFIER <iden> (258) 4 7 10 11 36 37
    INT_LITERAL <value> (259) 23 33
    CHAR_LITERAL <value> (260) 35
    REAL_LITERAL <value> (261) 34
    HEX_INT_LITERAL <value> (262) 33
    ADDOP (263) 28
    MULOP (264) 30
    RELOP (265) 27
    ANDOP (266) 24
    ARROW (267) 20 23
    BEGIN_ (268) 15
    CASE (269) 23
    CHARACTER (270) 6
    ELSE (271)
    END (272) 15
    ENDSWITCH (273) 20
    FUNCTION (274) 4
    INTEGER (275) 5
    IS (276) 10 11 20
    LIST (277) 11
    OF (278) 11
    OTHERS (279) 20
    RETURNS (280) 4
    SWITCH (281) 20
    WHEN (282) 19


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    function (34)
        on left: 1
        on right: 0
    variables (35)
        on left: 2 3
        on right: 1 2
    function_header (36)
        on left: 4
        on right: 1
    type <type> (37)
        on left: 5 6 7
        on right: 4 10 11
    optional_variable (38)
        on left: 8 9
        on right: 1
    variable (39)
        on left: 10 11
        on right: 2 8
    list <type> (40)
        on left: 12
        on right: 11
    expressions <type> (41)
        on left: 13 14
        on right: 12 13
    body <type> (42)
        on left: 15
        on right: 1
    statement_ <type> (43)
        on left: 16 17
        on right: 15
    statement <type> (44)
        on left: 18 19 20
        on right: 10 16 20 23
    cases <type> (45)
        on left: 21 22
        on right: 20 21
    case <type> (46)
        on left: 23
        on right: 21
    condition (47)
        on left: 24 25
        on right: 19 24 26
    relation (48)
        on left: 26 27
        on right: 24 25
    expression <type> (49)
        on left: 28 29
        on right: 13 14 18 19 20 27 28 32 36
    term <type> (50)
        on left: 30 31
        on right: 28 29 30
    primary <type> (51)
        on left: 32 33 34 35 36 37
        on right: 30 31


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    4 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • variables optional_variable body

    IDENTIFIER  shift, and go to state 6

    IDENTIFIER  [reduce using rule 3 (variables)]
    $default    reduce using rule 3 (variables)

    variables  go to state 7
    variable   go to state 8


State 4

    4 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

   10 variable: IDENTIFIER • ':' type IS statement ';'
   11         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 10


State 7

    1 function: function_header variables • optional_variable body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 9 (optional_variable)

    optional_variable  go to state 11
    variable           go to state 12


State 8

    2 variables: variable • variables

    IDENTIFIER  shift, and go to state 6

    IDENTIFIER  [reduce using rule 3 (variables)]
    $default    reduce using rule 3 (variables)

    variables  go to state 13
    variable   go to state 8


State 9

    4 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    IDENTIFIER  shift, and go to state 14
    CHARACTER   shift, and go to state 15
    INTEGER     shift, and go to state 16

    type  go to state 17


State 10

   10 variable: IDENTIFIER ':' • type IS statement ';'
   11         | IDENTIFIER ':' • LIST OF type IS list ';'

    IDENTIFIER  shift, and go to state 14
    CHARACTER   shift, and go to state 15
    INTEGER     shift, and go to state 16
    LIST        shift, and go to state 18

    type  go to state 19


State 11

    1 function: function_header variables optional_variable • body

    BEGIN_  shift, and go to state 20

    body  go to state 21


State 12

    8 optional_variable: variable •

    $default  reduce using rule 8 (optional_variable)


State 13

    2 variables: variable variables •

    $default  reduce using rule 2 (variables)


State 14

    7 type: IDENTIFIER •

    $default  reduce using rule 7 (type)


State 15

    6 type: CHARACTER •

    $default  reduce using rule 6 (type)


State 16

    5 type: INTEGER •

    $default  reduce using rule 5 (type)


State 17

    4 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 22


State 18

   11 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 23


State 19

   10 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 24


State 20

   15 body: BEGIN_ • statement_ END ';'

    error            shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    SWITCH           shift, and go to state 30
    WHEN             shift, and go to state 31
    '('              shift, and go to state 32

    statement_  go to state 33
    statement   go to state 34
    expression  go to state 35
    term        go to state 36
    primary     go to state 37


State 21

    1 function: function_header variables optional_variable body •

    $default  reduce using rule 1 (function)


State 22

    4 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 4 (function_header)


State 23

   11 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    IDENTIFIER  shift, and go to state 14
    CHARACTER   shift, and go to state 15
    INTEGER     shift, and go to state 16

    type  go to state 38


State 24

   10 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    SWITCH           shift, and go to state 30
    WHEN             shift, and go to state 31
    '('              shift, and go to state 32

    statement   go to state 39
    expression  go to state 35
    term        go to state 36
    primary     go to state 37


State 25

   17 statement_: error • ';'

    ';'  shift, and go to state 40


State 26

   36 primary: IDENTIFIER • '(' expression ')'
   37        | IDENTIFIER •

    '('  shift, and go to state 41

    $default  reduce using rule 37 (primary)


State 27

   35 primary: CHAR_LITERAL •

    $default  reduce using rule 35 (primary)


State 28

   34 primary: REAL_LITERAL •

    $default  reduce using rule 34 (primary)


State 29

   33 primary: HEX_INT_LITERAL • INT_LITERAL

    INT_LITERAL  shift, and go to state 42


State 30

   20 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    '('              shift, and go to state 32

    expression  go to state 43
    term        go to state 36
    primary     go to state 37


State 31

   19 statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    '('              shift, and go to state 44

    condition   go to state 45
    relation    go to state 46
    expression  go to state 47
    term        go to state 36
    primary     go to state 37


State 32

   32 primary: '(' • expression ')'

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    '('              shift, and go to state 32

    expression  go to state 48
    term        go to state 36
    primary     go to state 37


State 33

   15 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 49


State 34

   16 statement_: statement • ';'

    ';'  shift, and go to state 50


State 35

   18 statement: expression •
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51

    $default  reduce using rule 18 (statement)


State 36

   29 expression: term •
   30 term: term • MULOP primary

    MULOP  shift, and go to state 52

    $default  reduce using rule 29 (expression)


State 37

   31 term: primary •

    $default  reduce using rule 31 (term)


State 38

   11 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 53


State 39

   10 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 54


State 40

   17 statement_: error ';' •

    $default  reduce using rule 17 (statement_)


State 41

   36 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    '('              shift, and go to state 32

    expression  go to state 55
    term        go to state 36
    primary     go to state 37


State 42

   33 primary: HEX_INT_LITERAL INT_LITERAL •

    $default  reduce using rule 33 (primary)


State 43

   20 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51
    IS     shift, and go to state 56


State 44

   26 relation: '(' • condition ')'
   32 primary: '(' • expression ')'

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    '('              shift, and go to state 44

    condition   go to state 57
    relation    go to state 46
    expression  go to state 58
    term        go to state 36
    primary     go to state 37


State 45

   19 statement: WHEN condition • ',' expression ':' expression
   24 condition: condition • ANDOP relation

    ANDOP  shift, and go to state 59
    ','    shift, and go to state 60


State 46

   25 condition: relation •

    $default  reduce using rule 25 (condition)


State 47

   27 relation: expression • RELOP expression
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51
    RELOP  shift, and go to state 61


State 48

   28 expression: expression • ADDOP term
   32 primary: '(' expression • ')'

    ADDOP  shift, and go to state 51
    ')'    shift, and go to state 62


State 49

   15 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 63


State 50

   16 statement_: statement ';' •

    $default  reduce using rule 16 (statement_)


State 51

   28 expression: expression ADDOP • term

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    '('              shift, and go to state 32

    term     go to state 64
    primary  go to state 37


State 52

   30 term: term MULOP • primary

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    '('              shift, and go to state 32

    primary  go to state 65


State 53

   11 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 66

    list  go to state 67


State 54

   10 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 10 (variable)


State 55

   28 expression: expression • ADDOP term
   36 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 51
    ')'    shift, and go to state 68


State 56

   20 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 22 (cases)

    cases  go to state 69


State 57

   24 condition: condition • ANDOP relation
   26 relation: '(' condition • ')'

    ANDOP  shift, and go to state 59
    ')'    shift, and go to state 70


State 58

   27 relation: expression • RELOP expression
   28 expression: expression • ADDOP term
   32 primary: '(' expression • ')'

    ADDOP  shift, and go to state 51
    RELOP  shift, and go to state 61
    ')'    shift, and go to state 62


State 59

   24 condition: condition ANDOP • relation

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    '('              shift, and go to state 44

    relation    go to state 71
    expression  go to state 47
    term        go to state 36
    primary     go to state 37


State 60

   19 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    '('              shift, and go to state 32

    expression  go to state 72
    term        go to state 36
    primary     go to state 37


State 61

   27 relation: expression RELOP • expression

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    '('              shift, and go to state 32

    expression  go to state 73
    term        go to state 36
    primary     go to state 37


State 62

   32 primary: '(' expression ')' •

    $default  reduce using rule 32 (primary)


State 63

   15 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 15 (body)


State 64

   28 expression: expression ADDOP term •
   30 term: term • MULOP primary

    MULOP  shift, and go to state 52

    $default  reduce using rule 28 (expression)


State 65

   30 term: term MULOP primary •

    $default  reduce using rule 30 (term)


State 66

   12 list: '(' • expressions ')'

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    '('              shift, and go to state 32

    expressions  go to state 74
    expression   go to state 75
    term         go to state 36
    primary      go to state 37


State 67

   11 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 76


State 68

   36 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 36 (primary)


State 69

   20 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   21 cases: cases • case

    CASE    shift, and go to state 77
    OTHERS  shift, and go to state 78

    case  go to state 79


State 70

   26 relation: '(' condition ')' •

    $default  reduce using rule 26 (relation)


State 71

   24 condition: condition ANDOP relation •

    $default  reduce using rule 24 (condition)


State 72

   19 statement: WHEN condition ',' expression • ':' expression
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51
    ':'    shift, and go to state 80


State 73

   27 relation: expression RELOP expression •
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51

    $default  reduce using rule 27 (relation)


State 74

   12 list: '(' expressions • ')'
   13 expressions: expressions • ',' expression

    ')'  shift, and go to state 81
    ','  shift, and go to state 82


State 75

   14 expressions: expression •
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51

    $default  reduce using rule 14 (expressions)


State 76

   11 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 11 (variable)


State 77

   23 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 83


State 78

   20 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 84


State 79

   21 cases: cases case •

    $default  reduce using rule 21 (cases)


State 80

   19 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    '('              shift, and go to state 32

    expression  go to state 85
    term        go to state 36
    primary     go to state 37


State 81

   12 list: '(' expressions ')' •

    $default  reduce using rule 12 (list)


State 82

   13 expressions: expressions ',' • expression

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    '('              shift, and go to state 32

    expression  go to state 86
    term        go to state 36
    primary     go to state 37


State 83

   23 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 87


State 84

   20 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    SWITCH           shift, and go to state 30
    WHEN             shift, and go to state 31
    '('              shift, and go to state 32

    statement   go to state 88
    expression  go to state 35
    term        go to state 36
    primary     go to state 37


State 85

   19 statement: WHEN condition ',' expression ':' expression •
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51

    $default  reduce using rule 19 (statement)


State 86

   13 expressions: expressions ',' expression •
   28 expression: expression • ADDOP term

    ADDOP  shift, and go to state 51

    $default  reduce using rule 13 (expressions)


State 87

   23 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    REAL_LITERAL     shift, and go to state 28
    HEX_INT_LITERAL  shift, and go to state 29
    SWITCH           shift, and go to state 30
    WHEN             shift, and go to state 31
    '('              shift, and go to state 32

    statement   go to state 89
    expression  go to state 35
    term        go to state 36
    primary     go to state 37


State 88

   20 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 90


State 89

   23 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 91


State 90

   20 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 92


State 91

   23 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 23 (case)


State 92

   20 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 20 (statement)
