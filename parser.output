Terminals unused in grammar

    NOTOP


State 3 conflicts: 1 shift/reduce
State 8 conflicts: 1 shift/reduce
State 56 conflicts: 3 reduce/reduce


Grammar

    0 $accept: function $end

    1 function: function_header variables optional_variable body

    2 variables: variable variables
    3          | ε

    4 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    5 type: INTEGER
    6     | CHARACTER
    7     | REAL_LITERAL
    8     | IDENTIFIER

    9 optional_variable: variable
   10                  | ε

   11 variable: IDENTIFIER ':' type IS statement ';'
   12         | IDENTIFIER ':' LIST OF type IS list ';'

   13 list: '(' expressions ')'

   14 expressions: expressions ',' expression
   15            | expression

   16 body: BEGIN_ statement_ END ';'

   17 statement_: statement ';'
   18           | error ';'

   19 statement: expression
   20          | WHEN condition ',' expression ':' expression
   21          | IF condition THEN statements optional_elsif_else ENDIF
   22          | FOLD fold_direction ADDOP expression ENDFOLD
   23          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH

   24 fold_direction: LEFT
   25               | RIGHT

   26 optional_elsif_else: ELSIF condition THEN statements optional_elsif_else
   27                    | ELSE statements
   28                    | ε

   29 statements: statement ';' statements
   30           | statement ';'

   31 cases: cases case
   32      | ε

   33 case: CASE INT_LITERAL ARROW statement ';'

   34 condition: condition ANDOP relation
   35          | condition OROP relation
   36          | primary
   37          | relation

   38 relation: '(' condition ')'
   39         | expression RELOP expression
   40         | expression ANDOP expression
   41         | expression OROP expression

   42 expression: expression XOROP term
   43           | expression ADDOP term
   44           | expression MODOP term
   45           | term

   46 term: term MULOP primary
   47     | primary

   48 primary: '(' expression ')'
   49        | HEX_INT_LITERAL
   50        | INT_LITERAL
   51        | REAL_LITERAL
   52        | CHAR_LITERAL
   53        | NEGOP primary
   54        | IDENTIFIER '(' expression ')'
   55        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 13 38 48 54
    ')' (41) 13 38 48 54
    ',' (44) 14 20
    ':' (58) 11 12 20
    ';' (59) 4 11 12 16 17 18 23 29 30 33
    error (256) 18
    IDENTIFIER <iden> (258) 4 8 11 12 54 55
    INT_LITERAL <type> (259) 33 50
    CHAR_LITERAL <type> (260) 52
    REAL_LITERAL <type> (261) 7 51
    HEX_INT_LITERAL <type> (262) 49
    OROP <oper> (263) 35 41
    ANDOP <oper> (264) 34 40
    RELOP <oper> (265) 39
    ADDOP <oper> (266) 22 43
    MULOP <oper> (267) 46
    MODOP <oper> (268) 44
    XOROP <oper> (269) 42
    NEGOP <oper> (270) 53
    NOTOP <oper> (271)
    ARROW <oper> (272) 23 33
    FOLD (273) 22
    ENDFOLD (274) 22
    LEFT (275) 24
    RIGHT (276) 25
    BEGIN_ (277) 16
    CASE (278) 33
    CHARACTER (279) 6
    ELSE (280) 27
    END (281) 16
    ENDSWITCH (282) 23
    FUNCTION (283) 4
    INTEGER (284) 5
    IS (285) 11 12 23
    LIST (286) 12
    OF (287) 12
    OTHERS (288) 23
    RETURNS (289) 4
    SWITCH (290) 23
    WHEN (291) 20
    IF (292) 21
    ELSIF (293) 26
    ENDIF (294) 21
    THEN (295) 21 26


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    function (47)
        on left: 1
        on right: 0
    variables (48)
        on left: 2 3
        on right: 1 2
    function_header (49)
        on left: 4
        on right: 1
    type <type> (50)
        on left: 5 6 7 8
        on right: 4 11 12
    optional_variable <value> (51)
        on left: 9 10
        on right: 1
    variable (52)
        on left: 11 12
        on right: 2 9
    list <type> (53)
        on left: 13
        on right: 12
    expressions <type> (54)
        on left: 14 15
        on right: 13 14
    body <type> (55)
        on left: 16
        on right: 1
    statement_ <type> (56)
        on left: 17 18
        on right: 16
    statement <type> (57)
        on left: 19 20 21 22 23
        on right: 11 17 23 29 30 33
    fold_direction <value> (58)
        on left: 24 25
        on right: 22
    optional_elsif_else <type> (59)
        on left: 26 27 28
        on right: 21 26
    statements <type> (60)
        on left: 29 30
        on right: 21 26 27 29
    cases <type> (61)
        on left: 31 32
        on right: 23 31
    case <type> (62)
        on left: 33
        on right: 31
    condition <type> (63)
        on left: 34 35 36 37
        on right: 20 21 26 34 35 38
    relation <type> (64)
        on left: 38 39 40 41
        on right: 34 35 37
    expression <type> (65)
        on left: 42 43 44 45
        on right: 14 15 19 20 22 23 39 40 41 42 43 44 48 54
    term <type> (66)
        on left: 46 47
        on right: 42 43 44 45 46
    primary <type> (67)
        on left: 48 49 50 51 52 53 54 55
        on right: 36 46 47 53


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    4 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • variables optional_variable body

    IDENTIFIER  shift, and go to state 6

    IDENTIFIER  [reduce using rule 3 (variables)]
    $default    reduce using rule 3 (variables)

    variables  go to state 7
    variable   go to state 8


State 4

    4 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

   11 variable: IDENTIFIER • ':' type IS statement ';'
   12         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 10


State 7

    1 function: function_header variables • optional_variable body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 10 (optional_variable)

    optional_variable  go to state 11
    variable           go to state 12


State 8

    2 variables: variable • variables

    IDENTIFIER  shift, and go to state 6

    IDENTIFIER  [reduce using rule 3 (variables)]
    $default    reduce using rule 3 (variables)

    variables  go to state 13
    variable   go to state 8


State 9

    4 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    IDENTIFIER    shift, and go to state 14
    REAL_LITERAL  shift, and go to state 15
    CHARACTER     shift, and go to state 16
    INTEGER       shift, and go to state 17

    type  go to state 18


State 10

   11 variable: IDENTIFIER ':' • type IS statement ';'
   12         | IDENTIFIER ':' • LIST OF type IS list ';'

    IDENTIFIER    shift, and go to state 14
    REAL_LITERAL  shift, and go to state 15
    CHARACTER     shift, and go to state 16
    INTEGER       shift, and go to state 17
    LIST          shift, and go to state 19

    type  go to state 20


State 11

    1 function: function_header variables optional_variable • body

    BEGIN_  shift, and go to state 21

    body  go to state 22


State 12

    9 optional_variable: variable •

    $default  reduce using rule 9 (optional_variable)


State 13

    2 variables: variable variables •

    $default  reduce using rule 2 (variables)


State 14

    8 type: IDENTIFIER •

    $default  reduce using rule 8 (type)


State 15

    7 type: REAL_LITERAL •

    $default  reduce using rule 7 (type)


State 16

    6 type: CHARACTER •

    $default  reduce using rule 6 (type)


State 17

    5 type: INTEGER •

    $default  reduce using rule 5 (type)


State 18

    4 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 23


State 19

   12 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 24


State 20

   11 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 25


State 21

   16 body: BEGIN_ • statement_ END ';'

    error            shift, and go to state 26
    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    FOLD             shift, and go to state 33
    SWITCH           shift, and go to state 34
    WHEN             shift, and go to state 35
    IF               shift, and go to state 36
    '('              shift, and go to state 37

    statement_  go to state 38
    statement   go to state 39
    expression  go to state 40
    term        go to state 41
    primary     go to state 42


State 22

    1 function: function_header variables optional_variable body •

    $default  reduce using rule 1 (function)


State 23

    4 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 4 (function_header)


State 24

   12 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    IDENTIFIER    shift, and go to state 14
    REAL_LITERAL  shift, and go to state 15
    CHARACTER     shift, and go to state 16
    INTEGER       shift, and go to state 17

    type  go to state 43


State 25

   11 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    FOLD             shift, and go to state 33
    SWITCH           shift, and go to state 34
    WHEN             shift, and go to state 35
    IF               shift, and go to state 36
    '('              shift, and go to state 37

    statement   go to state 44
    expression  go to state 40
    term        go to state 41
    primary     go to state 42


State 26

   18 statement_: error • ';'

    ';'  shift, and go to state 45


State 27

   54 primary: IDENTIFIER • '(' expression ')'
   55        | IDENTIFIER •

    '('  shift, and go to state 46

    $default  reduce using rule 55 (primary)


State 28

   50 primary: INT_LITERAL •

    $default  reduce using rule 50 (primary)


State 29

   52 primary: CHAR_LITERAL •

    $default  reduce using rule 52 (primary)


State 30

   51 primary: REAL_LITERAL •

    $default  reduce using rule 51 (primary)


State 31

   49 primary: HEX_INT_LITERAL •

    $default  reduce using rule 49 (primary)


State 32

   53 primary: NEGOP • primary

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    primary  go to state 47


State 33

   22 statement: FOLD • fold_direction ADDOP expression ENDFOLD

    LEFT   shift, and go to state 48
    RIGHT  shift, and go to state 49

    fold_direction  go to state 50


State 34

   23 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    expression  go to state 51
    term        go to state 41
    primary     go to state 42


State 35

   20 statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 52

    condition   go to state 53
    relation    go to state 54
    expression  go to state 55
    term        go to state 41
    primary     go to state 56


State 36

   21 statement: IF • condition THEN statements optional_elsif_else ENDIF

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 52

    condition   go to state 57
    relation    go to state 54
    expression  go to state 55
    term        go to state 41
    primary     go to state 56


State 37

   48 primary: '(' • expression ')'

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    expression  go to state 58
    term        go to state 41
    primary     go to state 42


State 38

   16 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 59


State 39

   17 statement_: statement • ';'

    ';'  shift, and go to state 60


State 40

   19 statement: expression •
   42 expression: expression • XOROP term
   43           | expression • ADDOP term
   44           | expression • MODOP term

    ADDOP  shift, and go to state 61
    MODOP  shift, and go to state 62
    XOROP  shift, and go to state 63

    $default  reduce using rule 19 (statement)


State 41

   45 expression: term •
   46 term: term • MULOP primary

    MULOP  shift, and go to state 64

    $default  reduce using rule 45 (expression)


State 42

   47 term: primary •

    $default  reduce using rule 47 (term)


State 43

   12 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 65


State 44

   11 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 66


State 45

   18 statement_: error ';' •

    $default  reduce using rule 18 (statement_)


State 46

   54 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    expression  go to state 67
    term        go to state 41
    primary     go to state 42


State 47

   53 primary: NEGOP primary •

    $default  reduce using rule 53 (primary)


State 48

   24 fold_direction: LEFT •

    $default  reduce using rule 24 (fold_direction)


State 49

   25 fold_direction: RIGHT •

    $default  reduce using rule 25 (fold_direction)


State 50

   22 statement: FOLD fold_direction • ADDOP expression ENDFOLD

    ADDOP  shift, and go to state 68


State 51

   23 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   42 expression: expression • XOROP term
   43           | expression • ADDOP term
   44           | expression • MODOP term

    ADDOP  shift, and go to state 61
    MODOP  shift, and go to state 62
    XOROP  shift, and go to state 63
    IS     shift, and go to state 69


State 52

   38 relation: '(' • condition ')'
   48 primary: '(' • expression ')'

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 52

    condition   go to state 70
    relation    go to state 54
    expression  go to state 71
    term        go to state 41
    primary     go to state 56


State 53

   20 statement: WHEN condition • ',' expression ':' expression
   34 condition: condition • ANDOP relation
   35          | condition • OROP relation

    OROP   shift, and go to state 72
    ANDOP  shift, and go to state 73
    ','    shift, and go to state 74


State 54

   37 condition: relation •

    $default  reduce using rule 37 (condition)


State 55

   39 relation: expression • RELOP expression
   40         | expression • ANDOP expression
   41         | expression • OROP expression
   42 expression: expression • XOROP term
   43           | expression • ADDOP term
   44           | expression • MODOP term

    OROP   shift, and go to state 75
    ANDOP  shift, and go to state 76
    RELOP  shift, and go to state 77
    ADDOP  shift, and go to state 61
    MODOP  shift, and go to state 62
    XOROP  shift, and go to state 63


State 56

   36 condition: primary •
   47 term: primary •

    OROP      reduce using rule 36 (condition)
    OROP      [reduce using rule 47 (term)]
    ANDOP     reduce using rule 36 (condition)
    ANDOP     [reduce using rule 47 (term)]
    RELOP     reduce using rule 47 (term)
    ADDOP     reduce using rule 47 (term)
    MULOP     reduce using rule 47 (term)
    MODOP     reduce using rule 47 (term)
    XOROP     reduce using rule 47 (term)
    ')'       reduce using rule 36 (condition)
    ')'       [reduce using rule 47 (term)]
    $default  reduce using rule 36 (condition)


State 57

   21 statement: IF condition • THEN statements optional_elsif_else ENDIF
   34 condition: condition • ANDOP relation
   35          | condition • OROP relation

    OROP   shift, and go to state 72
    ANDOP  shift, and go to state 73
    THEN   shift, and go to state 78


State 58

   42 expression: expression • XOROP term
   43           | expression • ADDOP term
   44           | expression • MODOP term
   48 primary: '(' expression • ')'

    ADDOP  shift, and go to state 61
    MODOP  shift, and go to state 62
    XOROP  shift, and go to state 63
    ')'    shift, and go to state 79


State 59

   16 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 80


State 60

   17 statement_: statement ';' •

    $default  reduce using rule 17 (statement_)


State 61

   43 expression: expression ADDOP • term

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    term     go to state 81
    primary  go to state 42


State 62

   44 expression: expression MODOP • term

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    term     go to state 82
    primary  go to state 42


State 63

   42 expression: expression XOROP • term

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    term     go to state 83
    primary  go to state 42


State 64

   46 term: term MULOP • primary

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    primary  go to state 84


State 65

   12 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 85

    list  go to state 86


State 66

   11 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 11 (variable)


State 67

   42 expression: expression • XOROP term
   43           | expression • ADDOP term
   44           | expression • MODOP term
   54 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 61
    MODOP  shift, and go to state 62
    XOROP  shift, and go to state 63
    ')'    shift, and go to state 87


State 68

   22 statement: FOLD fold_direction ADDOP • expression ENDFOLD

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    expression  go to state 88
    term        go to state 41
    primary     go to state 42


State 69

   23 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 32 (cases)

    cases  go to state 89


State 70

   34 condition: condition • ANDOP relation
   35          | condition • OROP relation
   38 relation: '(' condition • ')'

    OROP   shift, and go to state 72
    ANDOP  shift, and go to state 73
    ')'    shift, and go to state 90


State 71

   39 relation: expression • RELOP expression
   40         | expression • ANDOP expression
   41         | expression • OROP expression
   42 expression: expression • XOROP term
   43           | expression • ADDOP term
   44           | expression • MODOP term
   48 primary: '(' expression • ')'

    OROP   shift, and go to state 75
    ANDOP  shift, and go to state 76
    RELOP  shift, and go to state 77
    ADDOP  shift, and go to state 61
    MODOP  shift, and go to state 62
    XOROP  shift, and go to state 63
    ')'    shift, and go to state 79


State 72

   35 condition: condition OROP • relation

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 52

    relation    go to state 91
    expression  go to state 55
    term        go to state 41
    primary     go to state 42


State 73

   34 condition: condition ANDOP • relation

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 52

    relation    go to state 92
    expression  go to state 55
    term        go to state 41
    primary     go to state 42


State 74

   20 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    expression  go to state 93
    term        go to state 41
    primary     go to state 42


State 75

   41 relation: expression OROP • expression

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    expression  go to state 94
    term        go to state 41
    primary     go to state 42


State 76

   40 relation: expression ANDOP • expression

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    expression  go to state 95
    term        go to state 41
    primary     go to state 42


State 77

   39 relation: expression RELOP • expression

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    expression  go to state 96
    term        go to state 41
    primary     go to state 42


State 78

   21 statement: IF condition THEN • statements optional_elsif_else ENDIF

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    FOLD             shift, and go to state 33
    SWITCH           shift, and go to state 34
    WHEN             shift, and go to state 35
    IF               shift, and go to state 36
    '('              shift, and go to state 37

    statement   go to state 97
    statements  go to state 98
    expression  go to state 40
    term        go to state 41
    primary     go to state 42


State 79

   48 primary: '(' expression ')' •

    $default  reduce using rule 48 (primary)


State 80

   16 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 16 (body)


State 81

   43 expression: expression ADDOP term •
   46 term: term • MULOP primary

    MULOP  shift, and go to state 64

    $default  reduce using rule 43 (expression)


State 82

   44 expression: expression MODOP term •
   46 term: term • MULOP primary

    MULOP  shift, and go to state 64

    $default  reduce using rule 44 (expression)


State 83

   42 expression: expression XOROP term •
   46 term: term • MULOP primary

    MULOP  shift, and go to state 64

    $default  reduce using rule 42 (expression)


State 84

   46 term: term MULOP primary •

    $default  reduce using rule 46 (term)


State 85

   13 list: '(' • expressions ')'

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    expressions  go to state 99
    expression   go to state 100
    term         go to state 41
    primary      go to state 42


State 86

   12 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 101


State 87

   54 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 54 (primary)


State 88

   22 statement: FOLD fold_direction ADDOP expression • ENDFOLD
   42 expression: expression • XOROP term
   43           | expression • ADDOP term
   44           | expression • MODOP term

    ADDOP    shift, and go to state 61
    MODOP    shift, and go to state 62
    XOROP    shift, and go to state 63
    ENDFOLD  shift, and go to state 102


State 89

   23 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   31 cases: cases • case

    CASE    shift, and go to state 103
    OTHERS  shift, and go to state 104

    case  go to state 105


State 90

   38 relation: '(' condition ')' •

    $default  reduce using rule 38 (relation)


State 91

   35 condition: condition OROP relation •

    $default  reduce using rule 35 (condition)


State 92

   34 condition: condition ANDOP relation •

    $default  reduce using rule 34 (condition)


State 93

   20 statement: WHEN condition ',' expression • ':' expression
   42 expression: expression • XOROP term
   43           | expression • ADDOP term
   44           | expression • MODOP term

    ADDOP  shift, and go to state 61
    MODOP  shift, and go to state 62
    XOROP  shift, and go to state 63
    ':'    shift, and go to state 106


State 94

   41 relation: expression OROP expression •
   42 expression: expression • XOROP term
   43           | expression • ADDOP term
   44           | expression • MODOP term

    ADDOP  shift, and go to state 61
    MODOP  shift, and go to state 62
    XOROP  shift, and go to state 63

    $default  reduce using rule 41 (relation)


State 95

   40 relation: expression ANDOP expression •
   42 expression: expression • XOROP term
   43           | expression • ADDOP term
   44           | expression • MODOP term

    ADDOP  shift, and go to state 61
    MODOP  shift, and go to state 62
    XOROP  shift, and go to state 63

    $default  reduce using rule 40 (relation)


State 96

   39 relation: expression RELOP expression •
   42 expression: expression • XOROP term
   43           | expression • ADDOP term
   44           | expression • MODOP term

    ADDOP  shift, and go to state 61
    MODOP  shift, and go to state 62
    XOROP  shift, and go to state 63

    $default  reduce using rule 39 (relation)


State 97

   29 statements: statement • ';' statements
   30           | statement • ';'

    ';'  shift, and go to state 107


State 98

   21 statement: IF condition THEN statements • optional_elsif_else ENDIF

    ELSE   shift, and go to state 108
    ELSIF  shift, and go to state 109

    $default  reduce using rule 28 (optional_elsif_else)

    optional_elsif_else  go to state 110


State 99

   13 list: '(' expressions • ')'
   14 expressions: expressions • ',' expression

    ')'  shift, and go to state 111
    ','  shift, and go to state 112


State 100

   15 expressions: expression •
   42 expression: expression • XOROP term
   43           | expression • ADDOP term
   44           | expression • MODOP term

    ADDOP  shift, and go to state 61
    MODOP  shift, and go to state 62
    XOROP  shift, and go to state 63

    $default  reduce using rule 15 (expressions)


State 101

   12 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 12 (variable)


State 102

   22 statement: FOLD fold_direction ADDOP expression ENDFOLD •

    $default  reduce using rule 22 (statement)


State 103

   33 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 113


State 104

   23 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 114


State 105

   31 cases: cases case •

    $default  reduce using rule 31 (cases)


State 106

   20 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    expression  go to state 115
    term        go to state 41
    primary     go to state 42


State 107

   29 statements: statement ';' • statements
   30           | statement ';' •

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    FOLD             shift, and go to state 33
    SWITCH           shift, and go to state 34
    WHEN             shift, and go to state 35
    IF               shift, and go to state 36
    '('              shift, and go to state 37

    $default  reduce using rule 30 (statements)

    statement   go to state 97
    statements  go to state 116
    expression  go to state 40
    term        go to state 41
    primary     go to state 42


State 108

   27 optional_elsif_else: ELSE • statements

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    FOLD             shift, and go to state 33
    SWITCH           shift, and go to state 34
    WHEN             shift, and go to state 35
    IF               shift, and go to state 36
    '('              shift, and go to state 37

    statement   go to state 97
    statements  go to state 117
    expression  go to state 40
    term        go to state 41
    primary     go to state 42


State 109

   26 optional_elsif_else: ELSIF • condition THEN statements optional_elsif_else

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 52

    condition   go to state 118
    relation    go to state 54
    expression  go to state 55
    term        go to state 41
    primary     go to state 56


State 110

   21 statement: IF condition THEN statements optional_elsif_else • ENDIF

    ENDIF  shift, and go to state 119


State 111

   13 list: '(' expressions ')' •

    $default  reduce using rule 13 (list)


State 112

   14 expressions: expressions ',' • expression

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    '('              shift, and go to state 37

    expression  go to state 120
    term        go to state 41
    primary     go to state 42


State 113

   33 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 121


State 114

   23 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    FOLD             shift, and go to state 33
    SWITCH           shift, and go to state 34
    WHEN             shift, and go to state 35
    IF               shift, and go to state 36
    '('              shift, and go to state 37

    statement   go to state 122
    expression  go to state 40
    term        go to state 41
    primary     go to state 42


State 115

   20 statement: WHEN condition ',' expression ':' expression •
   42 expression: expression • XOROP term
   43           | expression • ADDOP term
   44           | expression • MODOP term

    ADDOP  shift, and go to state 61
    MODOP  shift, and go to state 62
    XOROP  shift, and go to state 63

    $default  reduce using rule 20 (statement)


State 116

   29 statements: statement ';' statements •

    $default  reduce using rule 29 (statements)


State 117

   27 optional_elsif_else: ELSE statements •

    $default  reduce using rule 27 (optional_elsif_else)


State 118

   26 optional_elsif_else: ELSIF condition • THEN statements optional_elsif_else
   34 condition: condition • ANDOP relation
   35          | condition • OROP relation

    OROP   shift, and go to state 72
    ANDOP  shift, and go to state 73
    THEN   shift, and go to state 123


State 119

   21 statement: IF condition THEN statements optional_elsif_else ENDIF •

    $default  reduce using rule 21 (statement)


State 120

   14 expressions: expressions ',' expression •
   42 expression: expression • XOROP term
   43           | expression • ADDOP term
   44           | expression • MODOP term

    ADDOP  shift, and go to state 61
    MODOP  shift, and go to state 62
    XOROP  shift, and go to state 63

    $default  reduce using rule 14 (expressions)


State 121

   33 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    FOLD             shift, and go to state 33
    SWITCH           shift, and go to state 34
    WHEN             shift, and go to state 35
    IF               shift, and go to state 36
    '('              shift, and go to state 37

    statement   go to state 124
    expression  go to state 40
    term        go to state 41
    primary     go to state 42


State 122

   23 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 125


State 123

   26 optional_elsif_else: ELSIF condition THEN • statements optional_elsif_else

    IDENTIFIER       shift, and go to state 27
    INT_LITERAL      shift, and go to state 28
    CHAR_LITERAL     shift, and go to state 29
    REAL_LITERAL     shift, and go to state 30
    HEX_INT_LITERAL  shift, and go to state 31
    NEGOP            shift, and go to state 32
    FOLD             shift, and go to state 33
    SWITCH           shift, and go to state 34
    WHEN             shift, and go to state 35
    IF               shift, and go to state 36
    '('              shift, and go to state 37

    statement   go to state 97
    statements  go to state 126
    expression  go to state 40
    term        go to state 41
    primary     go to state 42


State 124

   33 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 127


State 125

   23 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 128


State 126

   26 optional_elsif_else: ELSIF condition THEN statements • optional_elsif_else

    ELSE   shift, and go to state 108
    ELSIF  shift, and go to state 109

    $default  reduce using rule 28 (optional_elsif_else)

    optional_elsif_else  go to state 129


State 127

   33 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 33 (case)


State 128

   23 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 23 (statement)


State 129

   26 optional_elsif_else: ELSIF condition THEN statements optional_elsif_else •

    $default  reduce using rule 26 (optional_elsif_else)
