Terminals unused in grammar

    NOTOP


State 3 conflicts: 1 shift/reduce
State 8 conflicts: 1 shift/reduce
State 57 conflicts: 3 reduce/reduce


Grammar

    0 $accept: function $end

    1 function: function_header variables optional_variable body

    2 variables: variable variables
    3          | ε

    4 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    5 type: INTEGER
    6     | CHARACTER
    7     | REAL_LITERAL
    8     | HEX_INT_LITERAL
    9     | IDENTIFIER

   10 optional_variable: variable
   11                  | ε

   12 variable: IDENTIFIER ':' type IS statement ';'
   13         | IDENTIFIER ':' LIST OF type IS list ';'

   14 list: '(' expressions ')'

   15 expressions: expression
   16            | expressions ',' expression

   17 body: BEGIN_ statement_ END ';'

   18 statement_: statement ';'
   19           | error ';'

   20 statement: expression
   21          | WHEN condition ',' expression ':' expression
   22          | IF condition THEN statements optional_elsif_else ENDIF
   23          | FOLD fold_direction ADDOP list ENDFOLD
   24          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH

   25 fold_direction: LEFT
   26               | RIGHT

   27 optional_elsif_else: ELSIF condition THEN statements optional_elsif_else
   28                    | ELSE statements
   29                    | ε

   30 statements: statement ';' statements
   31           | statement ';'

   32 cases: cases case
   33      | ε

   34 case: CASE INT_LITERAL ARROW statement ';'

   35 condition: condition ANDOP relation
   36          | condition OROP relation
   37          | primary
   38          | relation

   39 relation: '(' condition ')'
   40         | expression RELOP expression
   41         | expression ANDOP expression
   42         | expression OROP expression

   43 expression: expression XOROP term
   44           | expression ADDOP term
   45           | expression MODOP term
   46           | term

   47 term: term MULOP primary
   48     | primary

   49 primary: '(' expression ')'
   50        | HEX_INT_LITERAL
   51        | INT_LITERAL
   52        | REAL_LITERAL
   53        | CHAR_LITERAL
   54        | NEGOP primary
   55        | IDENTIFIER '(' expression ')'
   56        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 14 39 49 55
    ')' (41) 14 39 49 55
    ',' (44) 16 21
    ':' (58) 12 13 21
    ';' (59) 4 12 13 17 18 19 24 30 31 34
    error (256) 19
    IDENTIFIER <iden> (258) 4 9 12 13 55 56
    INT_LITERAL <type> (259) 34 51
    CHAR_LITERAL <type> (260) 53
    REAL_LITERAL <type> (261) 7 52
    HEX_INT_LITERAL <type> (262) 8 50
    OROP <oper> (263) 36 42
    ANDOP <oper> (264) 35 41
    RELOP <oper> (265) 40
    ADDOP <oper> (266) 23 44
    MULOP <oper> (267) 47
    MODOP <oper> (268) 45
    XOROP <oper> (269) 43
    NEGOP <oper> (270) 54
    NOTOP <oper> (271)
    ARROW <oper> (272) 24 34
    FOLD (273) 23
    ENDFOLD (274) 23
    LEFT (275) 25
    RIGHT (276) 26
    BEGIN_ (277) 17
    CASE (278) 34
    CHARACTER (279) 6
    ELSE (280) 28
    END (281) 17
    ENDSWITCH (282) 24
    FUNCTION (283) 4
    INTEGER (284) 5
    IS (285) 12 13 24
    LIST (286) 13
    OF (287) 13
    OTHERS (288) 24
    RETURNS (289) 4
    SWITCH (290) 24
    WHEN (291) 21
    IF (292) 22
    ELSIF (293) 27
    ENDIF (294) 22
    THEN (295) 22 27


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    function (47)
        on left: 1
        on right: 0
    variables (48)
        on left: 2 3
        on right: 1 2
    function_header (49)
        on left: 4
        on right: 1
    type <type> (50)
        on left: 5 6 7 8 9
        on right: 4 12 13
    optional_variable <value> (51)
        on left: 10 11
        on right: 1
    variable <type> (52)
        on left: 12 13
        on right: 2 10
    list <type> (53)
        on left: 14
        on right: 13 23
    expressions <type> (54)
        on left: 15 16
        on right: 14 16
    body <type> (55)
        on left: 17
        on right: 1
    statement_ <type> (56)
        on left: 18 19
        on right: 17
    statement <type> (57)
        on left: 20 21 22 23 24
        on right: 12 18 24 30 31 34
    fold_direction <value> (58)
        on left: 25 26
        on right: 23
    optional_elsif_else <type> (59)
        on left: 27 28 29
        on right: 22 27
    statements <type> (60)
        on left: 30 31
        on right: 22 27 28 30
    cases <type> (61)
        on left: 32 33
        on right: 24 32
    case <type> (62)
        on left: 34
        on right: 32
    condition <value> (63)
        on left: 35 36 37 38
        on right: 21 22 27 35 36 39
    relation <value> (64)
        on left: 39 40 41 42
        on right: 35 36 38
    expression <type> (65)
        on left: 43 44 45 46
        on right: 15 16 20 21 24 40 41 42 43 44 45 49 55
    term <type> (66)
        on left: 47 48
        on right: 43 44 45 46 47
    primary <type> (67)
        on left: 49 50 51 52 53 54 55 56
        on right: 37 47 48 54


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    4 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • variables optional_variable body

    IDENTIFIER  shift, and go to state 6

    IDENTIFIER  [reduce using rule 3 (variables)]
    $default    reduce using rule 3 (variables)

    variables  go to state 7
    variable   go to state 8


State 4

    4 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

   12 variable: IDENTIFIER • ':' type IS statement ';'
   13         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 10


State 7

    1 function: function_header variables • optional_variable body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 11 (optional_variable)

    optional_variable  go to state 11
    variable           go to state 12


State 8

    2 variables: variable • variables

    IDENTIFIER  shift, and go to state 6

    IDENTIFIER  [reduce using rule 3 (variables)]
    $default    reduce using rule 3 (variables)

    variables  go to state 13
    variable   go to state 8


State 9

    4 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    IDENTIFIER       shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    HEX_INT_LITERAL  shift, and go to state 16
    CHARACTER        shift, and go to state 17
    INTEGER          shift, and go to state 18

    type  go to state 19


State 10

   12 variable: IDENTIFIER ':' • type IS statement ';'
   13         | IDENTIFIER ':' • LIST OF type IS list ';'

    IDENTIFIER       shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    HEX_INT_LITERAL  shift, and go to state 16
    CHARACTER        shift, and go to state 17
    INTEGER          shift, and go to state 18
    LIST             shift, and go to state 20

    type  go to state 21


State 11

    1 function: function_header variables optional_variable • body

    BEGIN_  shift, and go to state 22

    body  go to state 23


State 12

   10 optional_variable: variable •

    $default  reduce using rule 10 (optional_variable)


State 13

    2 variables: variable variables •

    $default  reduce using rule 2 (variables)


State 14

    9 type: IDENTIFIER •

    $default  reduce using rule 9 (type)


State 15

    7 type: REAL_LITERAL •

    $default  reduce using rule 7 (type)


State 16

    8 type: HEX_INT_LITERAL •

    $default  reduce using rule 8 (type)


State 17

    6 type: CHARACTER •

    $default  reduce using rule 6 (type)


State 18

    5 type: INTEGER •

    $default  reduce using rule 5 (type)


State 19

    4 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 24


State 20

   13 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 25


State 21

   12 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 26


State 22

   17 body: BEGIN_ • statement_ END ';'

    error            shift, and go to state 27
    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    FOLD             shift, and go to state 34
    SWITCH           shift, and go to state 35
    WHEN             shift, and go to state 36
    IF               shift, and go to state 37
    '('              shift, and go to state 38

    statement_  go to state 39
    statement   go to state 40
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 23

    1 function: function_header variables optional_variable body •

    $default  reduce using rule 1 (function)


State 24

    4 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 4 (function_header)


State 25

   13 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    IDENTIFIER       shift, and go to state 14
    REAL_LITERAL     shift, and go to state 15
    HEX_INT_LITERAL  shift, and go to state 16
    CHARACTER        shift, and go to state 17
    INTEGER          shift, and go to state 18

    type  go to state 44


State 26

   12 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    FOLD             shift, and go to state 34
    SWITCH           shift, and go to state 35
    WHEN             shift, and go to state 36
    IF               shift, and go to state 37
    '('              shift, and go to state 38

    statement   go to state 45
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 27

   19 statement_: error • ';'

    ';'  shift, and go to state 46


State 28

   55 primary: IDENTIFIER • '(' expression ')'
   56        | IDENTIFIER •

    '('  shift, and go to state 47

    $default  reduce using rule 56 (primary)


State 29

   51 primary: INT_LITERAL •

    $default  reduce using rule 51 (primary)


State 30

   53 primary: CHAR_LITERAL •

    $default  reduce using rule 53 (primary)


State 31

   52 primary: REAL_LITERAL •

    $default  reduce using rule 52 (primary)


State 32

   50 primary: HEX_INT_LITERAL •

    $default  reduce using rule 50 (primary)


State 33

   54 primary: NEGOP • primary

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    primary  go to state 48


State 34

   23 statement: FOLD • fold_direction ADDOP list ENDFOLD

    LEFT   shift, and go to state 49
    RIGHT  shift, and go to state 50

    fold_direction  go to state 51


State 35

   24 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    expression  go to state 52
    term        go to state 42
    primary     go to state 43


State 36

   21 statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 53

    condition   go to state 54
    relation    go to state 55
    expression  go to state 56
    term        go to state 42
    primary     go to state 57


State 37

   22 statement: IF • condition THEN statements optional_elsif_else ENDIF

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 53

    condition   go to state 58
    relation    go to state 55
    expression  go to state 56
    term        go to state 42
    primary     go to state 57


State 38

   49 primary: '(' • expression ')'

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    expression  go to state 59
    term        go to state 42
    primary     go to state 43


State 39

   17 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 60


State 40

   18 statement_: statement • ';'

    ';'  shift, and go to state 61


State 41

   20 statement: expression •
   43 expression: expression • XOROP term
   44           | expression • ADDOP term
   45           | expression • MODOP term

    ADDOP  shift, and go to state 62
    MODOP  shift, and go to state 63
    XOROP  shift, and go to state 64

    $default  reduce using rule 20 (statement)


State 42

   46 expression: term •
   47 term: term • MULOP primary

    MULOP  shift, and go to state 65

    $default  reduce using rule 46 (expression)


State 43

   48 term: primary •

    $default  reduce using rule 48 (term)


State 44

   13 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 66


State 45

   12 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 67


State 46

   19 statement_: error ';' •

    $default  reduce using rule 19 (statement_)


State 47

   55 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    expression  go to state 68
    term        go to state 42
    primary     go to state 43


State 48

   54 primary: NEGOP primary •

    $default  reduce using rule 54 (primary)


State 49

   25 fold_direction: LEFT •

    $default  reduce using rule 25 (fold_direction)


State 50

   26 fold_direction: RIGHT •

    $default  reduce using rule 26 (fold_direction)


State 51

   23 statement: FOLD fold_direction • ADDOP list ENDFOLD

    ADDOP  shift, and go to state 69


State 52

   24 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   43 expression: expression • XOROP term
   44           | expression • ADDOP term
   45           | expression • MODOP term

    ADDOP  shift, and go to state 62
    MODOP  shift, and go to state 63
    XOROP  shift, and go to state 64
    IS     shift, and go to state 70


State 53

   39 relation: '(' • condition ')'
   49 primary: '(' • expression ')'

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 53

    condition   go to state 71
    relation    go to state 55
    expression  go to state 72
    term        go to state 42
    primary     go to state 57


State 54

   21 statement: WHEN condition • ',' expression ':' expression
   35 condition: condition • ANDOP relation
   36          | condition • OROP relation

    OROP   shift, and go to state 73
    ANDOP  shift, and go to state 74
    ','    shift, and go to state 75


State 55

   38 condition: relation •

    $default  reduce using rule 38 (condition)


State 56

   40 relation: expression • RELOP expression
   41         | expression • ANDOP expression
   42         | expression • OROP expression
   43 expression: expression • XOROP term
   44           | expression • ADDOP term
   45           | expression • MODOP term

    OROP   shift, and go to state 76
    ANDOP  shift, and go to state 77
    RELOP  shift, and go to state 78
    ADDOP  shift, and go to state 62
    MODOP  shift, and go to state 63
    XOROP  shift, and go to state 64


State 57

   37 condition: primary •
   48 term: primary •

    OROP      reduce using rule 37 (condition)
    OROP      [reduce using rule 48 (term)]
    ANDOP     reduce using rule 37 (condition)
    ANDOP     [reduce using rule 48 (term)]
    RELOP     reduce using rule 48 (term)
    ADDOP     reduce using rule 48 (term)
    MULOP     reduce using rule 48 (term)
    MODOP     reduce using rule 48 (term)
    XOROP     reduce using rule 48 (term)
    ')'       reduce using rule 37 (condition)
    ')'       [reduce using rule 48 (term)]
    $default  reduce using rule 37 (condition)


State 58

   22 statement: IF condition • THEN statements optional_elsif_else ENDIF
   35 condition: condition • ANDOP relation
   36          | condition • OROP relation

    OROP   shift, and go to state 73
    ANDOP  shift, and go to state 74
    THEN   shift, and go to state 79


State 59

   43 expression: expression • XOROP term
   44           | expression • ADDOP term
   45           | expression • MODOP term
   49 primary: '(' expression • ')'

    ADDOP  shift, and go to state 62
    MODOP  shift, and go to state 63
    XOROP  shift, and go to state 64
    ')'    shift, and go to state 80


State 60

   17 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 81


State 61

   18 statement_: statement ';' •

    $default  reduce using rule 18 (statement_)


State 62

   44 expression: expression ADDOP • term

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    term     go to state 82
    primary  go to state 43


State 63

   45 expression: expression MODOP • term

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    term     go to state 83
    primary  go to state 43


State 64

   43 expression: expression XOROP • term

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    term     go to state 84
    primary  go to state 43


State 65

   47 term: term MULOP • primary

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    primary  go to state 85


State 66

   13 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 86

    list  go to state 87


State 67

   12 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 12 (variable)


State 68

   43 expression: expression • XOROP term
   44           | expression • ADDOP term
   45           | expression • MODOP term
   55 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 62
    MODOP  shift, and go to state 63
    XOROP  shift, and go to state 64
    ')'    shift, and go to state 88


State 69

   23 statement: FOLD fold_direction ADDOP • list ENDFOLD

    '('  shift, and go to state 86

    list  go to state 89


State 70

   24 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 33 (cases)

    cases  go to state 90


State 71

   35 condition: condition • ANDOP relation
   36          | condition • OROP relation
   39 relation: '(' condition • ')'

    OROP   shift, and go to state 73
    ANDOP  shift, and go to state 74
    ')'    shift, and go to state 91


State 72

   40 relation: expression • RELOP expression
   41         | expression • ANDOP expression
   42         | expression • OROP expression
   43 expression: expression • XOROP term
   44           | expression • ADDOP term
   45           | expression • MODOP term
   49 primary: '(' expression • ')'

    OROP   shift, and go to state 76
    ANDOP  shift, and go to state 77
    RELOP  shift, and go to state 78
    ADDOP  shift, and go to state 62
    MODOP  shift, and go to state 63
    XOROP  shift, and go to state 64
    ')'    shift, and go to state 80


State 73

   36 condition: condition OROP • relation

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 53

    relation    go to state 92
    expression  go to state 56
    term        go to state 42
    primary     go to state 43


State 74

   35 condition: condition ANDOP • relation

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 53

    relation    go to state 93
    expression  go to state 56
    term        go to state 42
    primary     go to state 43


State 75

   21 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    expression  go to state 94
    term        go to state 42
    primary     go to state 43


State 76

   42 relation: expression OROP • expression

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    expression  go to state 95
    term        go to state 42
    primary     go to state 43


State 77

   41 relation: expression ANDOP • expression

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    expression  go to state 96
    term        go to state 42
    primary     go to state 43


State 78

   40 relation: expression RELOP • expression

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    expression  go to state 97
    term        go to state 42
    primary     go to state 43


State 79

   22 statement: IF condition THEN • statements optional_elsif_else ENDIF

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    FOLD             shift, and go to state 34
    SWITCH           shift, and go to state 35
    WHEN             shift, and go to state 36
    IF               shift, and go to state 37
    '('              shift, and go to state 38

    statement   go to state 98
    statements  go to state 99
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 80

   49 primary: '(' expression ')' •

    $default  reduce using rule 49 (primary)


State 81

   17 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 17 (body)


State 82

   44 expression: expression ADDOP term •
   47 term: term • MULOP primary

    MULOP  shift, and go to state 65

    $default  reduce using rule 44 (expression)


State 83

   45 expression: expression MODOP term •
   47 term: term • MULOP primary

    MULOP  shift, and go to state 65

    $default  reduce using rule 45 (expression)


State 84

   43 expression: expression XOROP term •
   47 term: term • MULOP primary

    MULOP  shift, and go to state 65

    $default  reduce using rule 43 (expression)


State 85

   47 term: term MULOP primary •

    $default  reduce using rule 47 (term)


State 86

   14 list: '(' • expressions ')'

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    expressions  go to state 100
    expression   go to state 101
    term         go to state 42
    primary      go to state 43


State 87

   13 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 102


State 88

   55 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 55 (primary)


State 89

   23 statement: FOLD fold_direction ADDOP list • ENDFOLD

    ENDFOLD  shift, and go to state 103


State 90

   24 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   32 cases: cases • case

    CASE    shift, and go to state 104
    OTHERS  shift, and go to state 105

    case  go to state 106


State 91

   39 relation: '(' condition ')' •

    $default  reduce using rule 39 (relation)


State 92

   36 condition: condition OROP relation •

    $default  reduce using rule 36 (condition)


State 93

   35 condition: condition ANDOP relation •

    $default  reduce using rule 35 (condition)


State 94

   21 statement: WHEN condition ',' expression • ':' expression
   43 expression: expression • XOROP term
   44           | expression • ADDOP term
   45           | expression • MODOP term

    ADDOP  shift, and go to state 62
    MODOP  shift, and go to state 63
    XOROP  shift, and go to state 64
    ':'    shift, and go to state 107


State 95

   42 relation: expression OROP expression •
   43 expression: expression • XOROP term
   44           | expression • ADDOP term
   45           | expression • MODOP term

    ADDOP  shift, and go to state 62
    MODOP  shift, and go to state 63
    XOROP  shift, and go to state 64

    $default  reduce using rule 42 (relation)


State 96

   41 relation: expression ANDOP expression •
   43 expression: expression • XOROP term
   44           | expression • ADDOP term
   45           | expression • MODOP term

    ADDOP  shift, and go to state 62
    MODOP  shift, and go to state 63
    XOROP  shift, and go to state 64

    $default  reduce using rule 41 (relation)


State 97

   40 relation: expression RELOP expression •
   43 expression: expression • XOROP term
   44           | expression • ADDOP term
   45           | expression • MODOP term

    ADDOP  shift, and go to state 62
    MODOP  shift, and go to state 63
    XOROP  shift, and go to state 64

    $default  reduce using rule 40 (relation)


State 98

   30 statements: statement • ';' statements
   31           | statement • ';'

    ';'  shift, and go to state 108


State 99

   22 statement: IF condition THEN statements • optional_elsif_else ENDIF

    ELSE   shift, and go to state 109
    ELSIF  shift, and go to state 110

    $default  reduce using rule 29 (optional_elsif_else)

    optional_elsif_else  go to state 111


State 100

   14 list: '(' expressions • ')'
   16 expressions: expressions • ',' expression

    ')'  shift, and go to state 112
    ','  shift, and go to state 113


State 101

   15 expressions: expression •
   43 expression: expression • XOROP term
   44           | expression • ADDOP term
   45           | expression • MODOP term

    ADDOP  shift, and go to state 62
    MODOP  shift, and go to state 63
    XOROP  shift, and go to state 64

    $default  reduce using rule 15 (expressions)


State 102

   13 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 13 (variable)


State 103

   23 statement: FOLD fold_direction ADDOP list ENDFOLD •

    $default  reduce using rule 23 (statement)


State 104

   34 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 114


State 105

   24 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 115


State 106

   32 cases: cases case •

    $default  reduce using rule 32 (cases)


State 107

   21 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    expression  go to state 116
    term        go to state 42
    primary     go to state 43


State 108

   30 statements: statement ';' • statements
   31           | statement ';' •

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    FOLD             shift, and go to state 34
    SWITCH           shift, and go to state 35
    WHEN             shift, and go to state 36
    IF               shift, and go to state 37
    '('              shift, and go to state 38

    $default  reduce using rule 31 (statements)

    statement   go to state 98
    statements  go to state 117
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 109

   28 optional_elsif_else: ELSE • statements

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    FOLD             shift, and go to state 34
    SWITCH           shift, and go to state 35
    WHEN             shift, and go to state 36
    IF               shift, and go to state 37
    '('              shift, and go to state 38

    statement   go to state 98
    statements  go to state 118
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 110

   27 optional_elsif_else: ELSIF • condition THEN statements optional_elsif_else

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 53

    condition   go to state 119
    relation    go to state 55
    expression  go to state 56
    term        go to state 42
    primary     go to state 57


State 111

   22 statement: IF condition THEN statements optional_elsif_else • ENDIF

    ENDIF  shift, and go to state 120


State 112

   14 list: '(' expressions ')' •

    $default  reduce using rule 14 (list)


State 113

   16 expressions: expressions ',' • expression

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    '('              shift, and go to state 38

    expression  go to state 121
    term        go to state 42
    primary     go to state 43


State 114

   34 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 122


State 115

   24 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    FOLD             shift, and go to state 34
    SWITCH           shift, and go to state 35
    WHEN             shift, and go to state 36
    IF               shift, and go to state 37
    '('              shift, and go to state 38

    statement   go to state 123
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 116

   21 statement: WHEN condition ',' expression ':' expression •
   43 expression: expression • XOROP term
   44           | expression • ADDOP term
   45           | expression • MODOP term

    ADDOP  shift, and go to state 62
    MODOP  shift, and go to state 63
    XOROP  shift, and go to state 64

    $default  reduce using rule 21 (statement)


State 117

   30 statements: statement ';' statements •

    $default  reduce using rule 30 (statements)


State 118

   28 optional_elsif_else: ELSE statements •

    $default  reduce using rule 28 (optional_elsif_else)


State 119

   27 optional_elsif_else: ELSIF condition • THEN statements optional_elsif_else
   35 condition: condition • ANDOP relation
   36          | condition • OROP relation

    OROP   shift, and go to state 73
    ANDOP  shift, and go to state 74
    THEN   shift, and go to state 124


State 120

   22 statement: IF condition THEN statements optional_elsif_else ENDIF •

    $default  reduce using rule 22 (statement)


State 121

   16 expressions: expressions ',' expression •
   43 expression: expression • XOROP term
   44           | expression • ADDOP term
   45           | expression • MODOP term

    ADDOP  shift, and go to state 62
    MODOP  shift, and go to state 63
    XOROP  shift, and go to state 64

    $default  reduce using rule 16 (expressions)


State 122

   34 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    FOLD             shift, and go to state 34
    SWITCH           shift, and go to state 35
    WHEN             shift, and go to state 36
    IF               shift, and go to state 37
    '('              shift, and go to state 38

    statement   go to state 125
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 123

   24 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 126


State 124

   27 optional_elsif_else: ELSIF condition THEN • statements optional_elsif_else

    IDENTIFIER       shift, and go to state 28
    INT_LITERAL      shift, and go to state 29
    CHAR_LITERAL     shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    HEX_INT_LITERAL  shift, and go to state 32
    NEGOP            shift, and go to state 33
    FOLD             shift, and go to state 34
    SWITCH           shift, and go to state 35
    WHEN             shift, and go to state 36
    IF               shift, and go to state 37
    '('              shift, and go to state 38

    statement   go to state 98
    statements  go to state 127
    expression  go to state 41
    term        go to state 42
    primary     go to state 43


State 125

   34 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 128


State 126

   24 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 129


State 127

   27 optional_elsif_else: ELSIF condition THEN statements • optional_elsif_else

    ELSE   shift, and go to state 109
    ELSIF  shift, and go to state 110

    $default  reduce using rule 29 (optional_elsif_else)

    optional_elsif_else  go to state 130


State 128

   34 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 34 (case)


State 129

   24 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 24 (statement)


State 130

   27 optional_elsif_else: ELSIF condition THEN statements optional_elsif_else •

    $default  reduce using rule 27 (optional_elsif_else)
